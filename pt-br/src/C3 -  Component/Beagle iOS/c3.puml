@startuml c2
!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml

LAYOUT_WITH_LEGEND()
LAYOUT_LEFT_RIGHT()

System_Ext(frontend_app, "Aplicativo iOS", "Um aplicativo que renderiza as telas do Beagle")
Container(beagle_backend, "Beagle Backend", "Koltin", "Permite a criação de telas seguindo o contrato do Beagle")

Container_Boundary(beagle_android, "Beagle iOS"){

  Component(screen, "Beagle Screen", "Swift", "Representações de telas do Beagle (View Controller)")
  Component(analytics, "Analytics", "Swift | Abstrato | Opcional", "Registra eventos de ciclo de vida de telas para ferramentas de analise")
  Component(view_client, "Network Client", "Swift | Abstrato", "Responsável por fazer requisições remotas para obter telas do Beagle. Requer implementação.")
  Component(view_model, "Beagle View Model", "Swift", "Responsável por fazer o intermédio entre IO do sistema e a visualização de componentes")
  Component(decoder, "Decoder", "Swift", "Transforma as respostas JSON do Backend em componentes Beagle")
  Component(beagle_component, "Beagle Component", "Swift", "Representa um elemento de interface do Beagle (Container, Botão, Texto, Lista, Ações, etc.)")
  Component(cache, "Cache", "Swift  | Abstrato | Opcional", "Armazena temporariamente estruturas de tela recebidas via servidor, indexadas por URI")
  Component(renderer, "Renderer", "Swift", "Organiza a renderização de componentes de UI e aplica estilos/acessibilidade")
  Component(beagle_config, "Beagle Config", "Swift", "Armazena configurações, estilos e componentes relacionados ao Beagle (Singleton)")
  Component(beagle_style, "Style", "Swift", "Armazena configurações de estilos dos componentes. Uma ponte entre o design system nativo e os componentes Beagle")
}

Rel(frontend_app, beagle_config, "Inicializa")
Rel(frontend_app, screen, "Inicializa")
Rel(beagle_config, beagle_style, "Possui")
Rel(beagle_config, beagle_component, "Armazena")
Rel(screen, renderer, "Usa")
Rel(view_client, beagle_backend, "Requisita telas", "JSON/Https")
Rel(view_client, decoder, "Usa")
Rel(view_client, cache, "Armazena respostas")
Rel(decoder, beagle_component, "Cria")
BiRel(screen, view_model, "Requisita conteúdo | Observa")
Rel(view_model, view_client, "Usa")
Rel(view_model, analytics, "Propaga eventos")
Rel(screen, beagle_component, "Contém um ou mais")
Rel(renderer, beagle_component, "Transforma em nativo")

@enduml
