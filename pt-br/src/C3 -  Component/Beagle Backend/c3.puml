@startuml c2
!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml
LAYOUT_WITH_LEGEND()

Container_Boundary(beagle_backend, "Beagle Backend"){

  Boundary(backend_starter, "Backend Starter"){
    Component(backend_starter_spring, "Beagle Spring Starter", "Aciona configurações automáticas iniciais para aplicações que usam Spring")
    Component(backend_starter_micronaut, "Beagle Micronaut Starter", "Aciona configurações automáticas iniciais para aplicações que usam Micronaut")
  }

  Boundary(framework, "Framework"){
    Component(screen_builder, "Screen Builder", "Interface utilitário para facilitar a criação de telas")
    Component(widget, "Widget", "Define o modelo base para criação de componentes")
    Component(beagle_components, "Componentes Beagle UI", "Define o modelo para criação de cada componente de UI do Beagle como Text, Button e etc...")
    Component(analytics, "Analytics", "Define o modelo para criação do serviço de analytics")
    Component(operations, "Operações", "Define o modelo para adicionar operações aos componentes")
    Component(actions, "Ações", "Define o modelo para adicionar ações aos componentes")
    Component(serialization, "Serialização", "Utilitário para serializar os componentes criados")
    Component(context, "Contexto", "Define o modelo para criação de contextos Beagle nos componentes")
    Component(layout_style, "Layout e Estilos", "Define o modelo para aplicar mudanças de layout como posicionamento e estilo como cores e tamanho")
  }

}

Rel(backend_starter,framework, "Configura")

Rel(serialization, beagle_components, "Serializa")

Rel(screen_builder,beagle_components, "Contém")
Rel(beagle_components,widget, "Herda atributos")
Rel(beagle_components,analytics, "Pode usar")
Rel(beagle_components,operations, "Pode usar")
Rel(beagle_components,actions, "Pode usar")
Rel(beagle_components,context, "Pode usar")
Rel(beagle_components,layout_style, "Pode usar")


@enduml
